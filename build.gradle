plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    // Kotlin Coroutines Core
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    // Coroutines testing dependency
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    // Database
    implementation 'com.h2database:h2'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.16'

    //Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test"
}

test {
    useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests tagged with @Integration'
    group = 'verification'

    useJUnitPlatform {
        includeTags("Integration")
    }

    // Inherits from default test configuration
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath

    shouldRunAfter test
}
